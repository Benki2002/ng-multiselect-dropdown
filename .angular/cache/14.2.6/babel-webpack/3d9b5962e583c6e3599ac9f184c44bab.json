{"ast":null,"code":"import _classCallCheck from \"C:/Users/benghedadra/Documents/computer_science/Programming/git_repos/forked/ng-multiselect-dropdown/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/benghedadra/Documents/computer_science/Programming/git_repos/forked/ng-multiselect-dropdown/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ElementRef, SimpleChanges } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nvar _c0 = [\"codeView\"];\nexport var CodeViewerComponent = /*#__PURE__*/(function () {\n  var CodeViewerComponent = /*#__PURE__*/function () {\n    function CodeViewerComponent(elementRef) {\n      _classCallCheck(this, CodeViewerComponent);\n\n      this.elementRef = elementRef;\n    }\n\n    _createClass(CodeViewerComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.useBr) {\n          hljs.configure({\n            useBR: true\n          });\n        }\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        if (changes['code'] && changes['code'].currentValue) {\n          this.needUpdate = true;\n        }\n      }\n    }, {\n      key: \"ngAfterViewChecked\",\n      value: function ngAfterViewChecked() {\n        if (!this.needUpdate) {\n          return;\n        }\n\n        this.needUpdate = false;\n\n        if (this.codeView.nativeElement.innerHTML) {\n          hljs.highlightBlock(this.codeView.nativeElement);\n        }\n      }\n    }]);\n\n    return CodeViewerComponent;\n  }();\n\n  CodeViewerComponent.ɵfac = function CodeViewerComponent_Factory(t) {\n    return new (t || CodeViewerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  CodeViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CodeViewerComponent,\n    selectors: [[\"sh-code-viewer\"]],\n    viewQuery: function CodeViewerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.codeView = _t.first);\n      }\n    },\n    inputs: {\n      useBr: \"useBr\",\n      code: \"code\",\n      language: \"language\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 2,\n    consts: [[3, \"className\", \"innerHTML\"], [\"codeView\", \"\"]],\n    template: function CodeViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"pre\");\n        i0.ɵɵtext(1, \"        \");\n        i0.ɵɵelement(2, \"code\", 0, 1);\n        i0.ɵɵtext(4, \"\\n    \");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"className\", ctx.language)(\"innerHTML\", ctx.code, i0.ɵɵsanitizeHtml);\n      }\n    },\n    styles: [\"pre{padding:0;margin:0}code{margin:0;padding-top:0}.hljs{display:block;overflow-x:auto;padding:.5em;background:#23241f}.hljs,.hljs-tag,.hljs-subst{color:#f8f8f2}.hljs-strong,.hljs-emphasis{color:#a8a8a2}.hljs-bullet,.hljs-quote,.hljs-number,.hljs-regexp,.hljs-literal,.hljs-link{color:#ae81ff}.hljs-code,.hljs-title,.hljs-section,.hljs-selector-class{color:#a6e22e}.hljs-strong{font-weight:700}.hljs-emphasis{font-style:italic}.hljs-keyword,.hljs-selector-tag,.hljs-name,.hljs-attr{color:#f92672}.hljs-symbol,.hljs-attribute{color:#66d9ef}.hljs-params,.hljs-class .hljs-title{color:#f8f8f2}.hljs-string,.hljs-type,.hljs-built_in,.hljs-builtin-name,.hljs-selector-id,.hljs-selector-attr,.hljs-selector-pseudo,.hljs-addition,.hljs-variable,.hljs-template-variable{color:#e6db74}.hljs-comment,.hljs-deletion,.hljs-meta{color:#75715e}\\n\"],\n    encapsulation: 2\n  });\n  return CodeViewerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}