{"ast":null,"code":"import _toConsumableArray from \"C:/Users/benghedadra/Documents/computer_science/Programming/git_repos/forked/ng-multiselect-dropdown/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/benghedadra/Documents/computer_science/Programming/git_repos/forked/ng-multiselect-dropdown/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/benghedadra/Documents/computer_science/Programming/git_repos/forked/ng-multiselect-dropdown/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FormBuilder } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-bootstrap/tabs\";\nimport * as i3 from \"../../../ng-multiselect-dropdown/src/multiselect.component\";\nimport * as i4 from \"../../../code-viewer/code-viewer\";\nimport * as i5 from \"@angular/common\";\nexport var MultipleDemoComponent = /*#__PURE__*/(function () {\n  var MultipleDemoComponent = /*#__PURE__*/function () {\n    function MultipleDemoComponent(fb) {\n      _classCallCheck(this, MultipleDemoComponent);\n\n      this.fb = fb;\n      this.disabled = false;\n      this.ShowFilter = true;\n      this.showAll = true;\n      this.limitSelection = false;\n      this.limitShow = false;\n      this.disableBangalore = true;\n      this.cities = [];\n      this.selectedItems = [];\n      this.dropdownSettings = {};\n      this.htmlCode = \"\\n    &lt;form [formGroup]=\\\"myForm\\\"&gt;\\n        &lt;ng-multiselect-dropdown\\n            name=\\\"city\\\"\\n            [placeholder]=\\\"'Select City'\\\"\\n            [data]=\\\"cities\\\"\\n            formControlName=\\\"city\\\"\\n            [disabled]=\\\"disabled\\\"\\n            [settings]=\\\"dropdownSettings\\\"\\n            (onSelect)=\\\"onItemSelect($event)\\\"\\n            (onDeSelect)=\\\"onItemDeSelect($event)\\\"&gt;\\n        &lt;/ng-multiselect-dropdown&gt;\\n   &lt;/form&gt;\\n\";\n      this.typescriptCode = \"\\n    import { FormBuilder, FormGroup } from '@angular/forms';\\n    import { Component, OnInit } from '@angular/core';\\n\\n    @Component({\\n        selector: 'multiple-demo',\\n        templateUrl: './multiple-demo.html'\\n    })\\n    export class MultipleDemoComponent implements OnInit {\\n        myForm:FormGroup;\\n        disabled = false;\\n        ShowFilter = false;\\n        limitSelection = false;\\n        limitShow = false;\\n        cities: Array<any> = [];\\n        selectedItems: Array<any> = [];\\n        dropdownSettings: any = {};\\n        constructor(private fb: FormBuilder) {}\\n\\n        ngOnInit() {\\n            this.cities = [\\n                { item_id: 1, item_text: 'New Delhi' },\\n                { item_id: 2, item_text: 'Mumbai' },\\n                { item_id: 3, item_text: 'Bangalore' },\\n                { item_id: 4, item_text: 'Pune' },\\n                { item_id: 5, item_text: 'Chennai' },\\n                { item_id: 6, item_text: 'Navsari' }\\n            ];\\n            this.selectedItems = [{ item_id: 4, item_text: 'Pune' }, { item_id: 6, item_text: 'Navsari' }];\\n            this.dropdownSettings = {\\n                singleSelection: false,\\n                idField: 'item_id',\\n                textField: 'item_text',\\n                selectAllText: 'Select All',\\n                unSelectAllText: 'UnSelect All',\\n                itemsShowLimit: 99999,\\n                allowSearchFilter: this.ShowFilter\\n            };\\n            this.myForm = this.fb.group({\\n                city: [this.selectedItems]\\n            });\\n        }\\n\\n        onItemSelect(item: any) {\\n            console.log('onItemSelect', item);\\n        }\\n        onSelectAll(items: any) {\\n            console.log('onSelectAll', items);\\n        }\\n        toogleShowFilter() {\\n            this.ShowFilter = !this.ShowFilter;\\n            this.dropdownSettings = Object.assign({}, this.dropdownSettings, { allowSearchFilter: this.ShowFilter });\\n        }\\n\\n        handleLimitSelection() {\\n            if (this.limitSelection) {\\n                this.dropdownSettings = Object.assign({}, this.dropdownSettings, { limitSelection: 2 });\\n            } else {\\n                this.dropdownSettings = Object.assign({}, this.dropdownSettings, { limitSelection: null });\\n            }\\n        }\\n\\n        handleLimitShow() {\\n          if (this.limitShow) {\\n            this.dropdownSettings = Object.assign({}, this.dropdownSettings, {\\n              itemsShowLimit: 3\\n            });\\n          } else {\\n            this.dropdownSettings = Object.assign({}, this.dropdownSettings, {\\n              itemsShowLimit: 999999\\n            });\\n          }\\n          console.log()\\n        }\\n    }\\n\";\n    }\n\n    _createClass(MultipleDemoComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.cities = [{\n          item_id: 1,\n          item_text: 'New Delhi'\n        }, {\n          item_id: 2,\n          item_text: 'Mumbai'\n        }, {\n          item_id: 3,\n          item_text: 'Bangalore',\n          isDisabled: this.disableBangalore\n        }, {\n          item_id: 4,\n          item_text: 'Pune'\n        }, {\n          item_id: 5,\n          item_text: 'Chennai'\n        }, {\n          item_id: 6,\n          item_text: 'Navsari'\n        }];\n        this.selectedItems = [{\n          item_id: 4,\n          item_text: 'Pune'\n        }, {\n          item_id: 6,\n          item_text: 'Navsari'\n        }];\n        this.dropdownSettings = {\n          singleSelection: false,\n          defaultOpen: false,\n          idField: 'item_id',\n          textField: 'item_text',\n          selectAllText: 'Select All',\n          unSelectAllText: 'UnSelect All',\n          enableCheckAll: this.showAll,\n          itemsShowLimit: 999999,\n          allowSearchFilter: this.ShowFilter\n        };\n        this.myForm = this.fb.group({\n          city: [this.selectedItems]\n        });\n      }\n    }, {\n      key: \"onItemSelect\",\n      value: function onItemSelect(item) {\n        console.log('onItemSelect', item);\n        console.log('form model', this.myForm.get('city').value);\n      }\n    }, {\n      key: \"onItemDeSelect\",\n      value: function onItemDeSelect(item) {\n        console.log('onItem DeSelect', item);\n        console.log('form model', this.myForm.get('city').value);\n      }\n    }, {\n      key: \"onSelectAll\",\n      value: function onSelectAll(items) {\n        console.log('onSelectAll', items);\n      }\n    }, {\n      key: \"onDropDownClose\",\n      value: function onDropDownClose() {\n        console.log('dropdown closed');\n      }\n    }, {\n      key: \"toogleShowAll\",\n      value: function toogleShowAll() {\n        this.showAll = !this.showAll;\n        this.dropdownSettings = Object.assign({}, this.dropdownSettings, {\n          enableCheckAll: this.showAll\n        });\n      }\n    }, {\n      key: \"toogleShowFilter\",\n      value: function toogleShowFilter() {\n        this.ShowFilter = !this.ShowFilter;\n        this.dropdownSettings = Object.assign({}, this.dropdownSettings, {\n          allowSearchFilter: this.ShowFilter\n        });\n      }\n    }, {\n      key: \"handleLimitSelection\",\n      value: function handleLimitSelection() {\n        if (this.limitSelection) {\n          this.dropdownSettings = Object.assign({}, this.dropdownSettings, {\n            limitSelection: 2\n          });\n        } else {\n          this.dropdownSettings = Object.assign({}, this.dropdownSettings, {\n            limitSelection: -1\n          });\n        }\n      }\n    }, {\n      key: \"handleLimitShow\",\n      value: function handleLimitShow() {\n        if (this.limitShow) {\n          this.dropdownSettings = Object.assign({}, this.dropdownSettings, {\n            itemsShowLimit: 3\n          });\n        } else {\n          this.dropdownSettings = Object.assign({}, this.dropdownSettings, {\n            itemsShowLimit: 999999\n          });\n        }\n\n        console.log();\n      }\n    }, {\n      key: \"handleDisableBangalore\",\n      value: function handleDisableBangalore() {\n        this.cities[2].isDisabled = this.disableBangalore;\n        this.cities = _toConsumableArray(this.cities);\n      }\n    }, {\n      key: \"handleReset\",\n      value: function handleReset() {\n        this.myForm.get('city').setValue([]);\n      }\n    }]);\n\n    return MultipleDemoComponent;\n  }();\n\n  MultipleDemoComponent.ɵfac = function MultipleDemoComponent_Factory(t) {\n    return new (t || MultipleDemoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  MultipleDemoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MultipleDemoComponent,\n    selectors: [[\"multiple-demo\"]],\n    decls: 50,\n    vars: 22,\n    consts: [[2, \"margin-bottom\", \"20px\"], [1, \"row\"], [1, \"col-md-4\"], [3, \"formGroup\"], [\"name\", \"city\", \"formControlName\", \"city\", 3, \"placeholder\", \"data\", \"disabled\", \"settings\", \"onDropDownClose\", \"onSelect\", \"onDeSelect\", \"onSelectAll\"], [1, \"col-md-8\"], [1, \"checkbox\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [\"type\", \"checkbox\", 3, \"checked\", \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", 3, \"checked\", \"ngModel\", \"ngModelChange\", \"change\"], [\"type\", \"button\", \"value\", \"reset\", 3, \"click\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"panel-body\"], [\"heading\", \"Html\"], [3, \"code\", \"language\"], [\"heading\", \"Typescript\"]],\n    template: function MultipleDemoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n        i0.ɵɵtext(4, \"Select Multiple Cities\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 3)(6, \"ng-multiselect-dropdown\", 4);\n        i0.ɵɵlistener(\"onDropDownClose\", function MultipleDemoComponent_Template_ng_multiselect_dropdown_onDropDownClose_6_listener() {\n          return ctx.onDropDownClose();\n        })(\"onSelect\", function MultipleDemoComponent_Template_ng_multiselect_dropdown_onSelect_6_listener($event) {\n          return ctx.onItemSelect($event);\n        })(\"onDeSelect\", function MultipleDemoComponent_Template_ng_multiselect_dropdown_onDeSelect_6_listener($event) {\n          return ctx.onItemDeSelect($event);\n        })(\"onSelectAll\", function MultipleDemoComponent_Template_ng_multiselect_dropdown_onSelectAll_6_listener($event) {\n          return ctx.onSelectAll($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"p\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"h3\");\n        i0.ɵɵtext(10, \"Option\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\")(13, \"input\", 7);\n        i0.ɵɵlistener(\"change\", function MultipleDemoComponent_Template_input_change_13_listener() {\n          return ctx.toogleShowAll();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \" Show Select All \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\")(17, \"input\", 7);\n        i0.ɵɵlistener(\"change\", function MultipleDemoComponent_Template_input_change_17_listener() {\n          return ctx.toogleShowFilter();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \" Show Search filter \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\")(21, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function MultipleDemoComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.disabled = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22, \" Disabled \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 6)(24, \"label\")(25, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function MultipleDemoComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.limitSelection = $event;\n        })(\"change\", function MultipleDemoComponent_Template_input_change_25_listener() {\n          return ctx.handleLimitSelection();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \" Limit Selection to 2 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 6)(28, \"label\")(29, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function MultipleDemoComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.limitShow = $event;\n        })(\"change\", function MultipleDemoComponent_Template_input_change_29_listener() {\n          return ctx.handleLimitShow();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30, \" Limit Items Shown to 3 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 6)(32, \"label\")(33, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function MultipleDemoComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.disableBangalore = $event;\n        })(\"change\", function MultipleDemoComponent_Template_input_change_33_listener() {\n          return ctx.handleDisableBangalore();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(34, \" Disable Bangalore \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 6)(36, \"label\")(37, \"input\", 10);\n        i0.ɵɵlistener(\"click\", function MultipleDemoComponent_Template_input_click_37_listener() {\n          return ctx.handleReset();\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(38, \"div\", 11)(39, \"div\", 12);\n        i0.ɵɵtext(40, \"Settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 13)(42, \"pre\");\n        i0.ɵɵtext(43);\n        i0.ɵɵpipe(44, \"json\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(45, \"tabset\")(46, \"tab\", 14);\n        i0.ɵɵelement(47, \"sh-code-viewer\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"tab\", 16);\n        i0.ɵɵelement(49, \"sh-code-viewer\", 15);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"placeholder\", \"Select City\")(\"data\", ctx.cities)(\"disabled\", ctx.disabled)(\"settings\", ctx.dropdownSettings);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"checked\", ctx.showAll);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.ShowFilter);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.disabled)(\"ngModel\", ctx.disabled);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.limitSelection)(\"ngModel\", ctx.limitSelection);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.limitShow)(\"ngModel\", ctx.limitShow);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.disableBangalore)(\"ngModel\", ctx.disableBangalore);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate1(\"       \", i0.ɵɵpipeBind1(44, 20, ctx.dropdownSettings), \"\\n      \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"code\", ctx.htmlCode)(\"language\", \"html\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"code\", ctx.typescriptCode)(\"language\", \"typescript\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.FormGroupDirective, i1.FormControlName, i2.TabDirective, i2.TabsetComponent, i3.MultiSelectComponent, i4.CodeViewerComponent, i5.JsonPipe],\n    encapsulation: 2\n  });\n  return MultipleDemoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}