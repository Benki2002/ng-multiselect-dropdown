{"ast":null,"code":"import _classCallCheck from \"C:/Users/benghedadra/Documents/computer_science/Programming/git_repos/forked/ng-multiselect-dropdown/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/benghedadra/Documents/computer_science/Programming/git_repos/forked/ng-multiselect-dropdown/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { forwardRef, EventEmitter, ChangeDetectorRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { ListItem } from \"./multiselect.model\";\nimport { ListFilterPipe } from \"./list-filter.pipe\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./list-filter.pipe\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"./click-outside.directive\";\n\nfunction MultiSelectComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0._placeholder);\n  }\n}\n\nfunction MultiSelectComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 15)(1, \"span\", 16)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function MultiSelectComponent_span_4_Template_a_click_4_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var item_r8 = restoredCtx.$implicit;\n      var ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onItemClick($event, item_r8));\n    });\n    i0.ɵɵtext(5, \"x\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var item_r8 = ctx.$implicit;\n    var k_r9 = ctx.index;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", k_r9 > ctx_r1._settings.itemsShowLimit - 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r8.text, \"\\xA0\");\n  }\n}\n\nfunction MultiSelectComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"+\", ctx_r2.itemShowRemaining(), \"\");\n  }\n}\n\nfunction MultiSelectComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵlistener(\"click\", function MultiSelectComponent_li_10_Template_li_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.toggleSelectAll());\n    });\n    i0.ɵɵelement(1, \"input\", 20);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r3.isAllItemsSelected())(\"disabled\", ctx_r3.disabled || ctx_r3.isLimitSelectionReached());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(!ctx_r3.isAllItemsSelected() ? ctx_r3._settings.selectAllText : ctx_r3._settings.unSelectAllText);\n  }\n}\n\nfunction MultiSelectComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 21)(1, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function MultiSelectComponent_li_11_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      var ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.filter.text = $event);\n    })(\"ngModelChange\", function MultiSelectComponent_li_11_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      var ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onFilterTextChange($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"readOnly\", ctx_r4.disabled)(\"placeholder\", ctx_r4._settings.searchPlaceholderText)(\"ngModel\", ctx_r4.filter.text);\n  }\n}\n\nfunction MultiSelectComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 23);\n    i0.ɵɵlistener(\"click\", function MultiSelectComponent_li_13_Template_li_click_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var item_r17 = restoredCtx.$implicit;\n      var ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onItemClick($event, item_r17));\n    });\n    i0.ɵɵelement(1, \"input\", 24);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var item_r17 = ctx.$implicit;\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r5.isSelected(item_r17))(\"disabled\", ctx_r5.disabled || ctx_r5.isLimitSelectionReached() && !ctx_r5.isSelected(item_r17) || item_r17.isDisabled);\n    i0.ɵɵattribute(\"aria-label\", item_r17.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r17.text);\n  }\n}\n\nfunction MultiSelectComponent_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 25)(1, \"h5\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6._settings.noFilteredDataAvailablePlaceholderText);\n  }\n}\n\nfunction MultiSelectComponent_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 26)(1, \"h5\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r7._settings.noDataAvailablePlaceholderText);\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    \"dropdown-multiselect--active\": a0\n  };\n};\n\nexport var DROPDOWN_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return MultiSelectComponent;\n  }),\n  multi: true\n};\n\nvar noop = function noop() {};\n\nexport var MultiSelectComponent = /*#__PURE__*/(function () {\n  var MultiSelectComponent = /*#__PURE__*/function () {\n    function MultiSelectComponent(listFilterPipe, cdr) {\n      _classCallCheck(this, MultiSelectComponent);\n\n      this.listFilterPipe = listFilterPipe;\n      this.cdr = cdr;\n      this._data = [];\n      this.selectedItems = [];\n      this.isDropdownOpen = true;\n      this._placeholder = \"Select\";\n      this._sourceDataType = null; // to keep note of the source data type. could be array of string/number/object\n\n      this._sourceDataFields = []; // store source data fields names\n\n      this.filter = new ListItem(this.data);\n      this.defaultSettings = {\n        singleSelection: false,\n        idField: \"id\",\n        textField: \"text\",\n        disabledField: \"isDisabled\",\n        enableCheckAll: true,\n        selectAllText: \"Select All\",\n        unSelectAllText: \"UnSelect All\",\n        allowSearchFilter: false,\n        limitSelection: -1,\n        clearSearchFilter: true,\n        maxHeight: 197,\n        itemsShowLimit: 999999999999,\n        searchPlaceholderText: \"Search\",\n        noDataAvailablePlaceholderText: \"No data available\",\n        noFilteredDataAvailablePlaceholderText: \"No filtered data available\",\n        closeDropDownOnSelection: false,\n        showSelectedItemsAtTop: false,\n        defaultOpen: false,\n        allowRemoteDataSearch: false\n      };\n      this.disabled = false;\n      this.onFilterChange = new EventEmitter();\n      this.onDropDownClose = new EventEmitter();\n      this.onSelect = new EventEmitter();\n      this.onDeSelect = new EventEmitter();\n      this.onSelectAll = new EventEmitter();\n      this.onDeSelectAll = new EventEmitter();\n      this.onTouchedCallback = noop;\n      this.onChangeCallback = noop;\n    }\n\n    _createClass(MultiSelectComponent, [{\n      key: \"placeholder\",\n      set: function set(value) {\n        if (value) {\n          this._placeholder = value;\n        } else {\n          this._placeholder = \"Select\";\n        }\n      }\n    }, {\n      key: \"settings\",\n      set: function set(value) {\n        if (value) {\n          this._settings = Object.assign(this.defaultSettings, value);\n        } else {\n          this._settings = Object.assign(this.defaultSettings);\n        }\n      }\n    }, {\n      key: \"data\",\n      set: function set(value) {\n        var _this = this;\n\n        if (!value) {\n          this._data = [];\n        } else {\n          var firstItem = value[0];\n          this._sourceDataType = typeof firstItem;\n          this._sourceDataFields = this.getFields(firstItem);\n          this._data = value.map(function (item) {\n            return typeof item === \"string\" || typeof item === \"number\" ? new ListItem(item) : new ListItem({\n              id: item[_this._settings.idField],\n              text: item[_this._settings.textField],\n              isDisabled: item[_this._settings.disabledField]\n            });\n          });\n        }\n      }\n    }, {\n      key: \"onFilterTextChange\",\n      value: function onFilterTextChange($event) {\n        this.onFilterChange.emit($event);\n      }\n    }, {\n      key: \"onItemClick\",\n      value: function onItemClick($event, item) {\n        if (this.disabled || item.isDisabled) {\n          return false;\n        }\n\n        var found = this.isSelected(item);\n        var allowAdd = this._settings.limitSelection === -1 || this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection;\n\n        if (!found) {\n          if (allowAdd) {\n            this.addSelected(item);\n          }\n        } else {\n          this.removeSelected(item);\n        }\n\n        if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\n          this.closeDropdown();\n        }\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        var _this2 = this;\n\n        if (value !== undefined && value !== null && value.length > 0) {\n          if (this._settings.singleSelection) {\n            try {\n              if (value.length >= 1) {\n                var firstItem = value[0];\n                this.selectedItems = [typeof firstItem === \"string\" || typeof firstItem === \"number\" ? new ListItem(firstItem) : new ListItem({\n                  id: firstItem[this._settings.idField],\n                  text: firstItem[this._settings.textField],\n                  isDisabled: firstItem[this._settings.disabledField]\n                })];\n              }\n            } catch (e) {// console.error(e.body.msg);\n            }\n          } else {\n            var _data = value.map(function (item) {\n              return typeof item === \"string\" || typeof item === \"number\" ? new ListItem(item) : new ListItem({\n                id: item[_this2._settings.idField],\n                text: item[_this2._settings.textField],\n                isDisabled: item[_this2._settings.disabledField]\n              });\n            });\n\n            if (this._settings.limitSelection > 0) {\n              this.selectedItems = _data.splice(0, this._settings.limitSelection);\n            } else {\n              this.selectedItems = _data;\n            }\n          }\n        } else {\n          this.selectedItems = [];\n        }\n\n        this.onChangeCallback(value);\n        this.cdr.markForCheck();\n      } // From ControlValueAccessor interface\n\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.onChangeCallback = fn;\n      } // From ControlValueAccessor interface\n\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n      } // Set touched on blur\n\n    }, {\n      key: \"onTouched\",\n      value: function onTouched() {\n        // this.closeDropdown();\n        this.onTouchedCallback();\n      }\n    }, {\n      key: \"trackByFn\",\n      value: function trackByFn(index, item) {\n        return item.id;\n      }\n    }, {\n      key: \"isSelected\",\n      value: function isSelected(clickedItem) {\n        var found = false;\n        this.selectedItems.forEach(function (item) {\n          if (clickedItem.id === item.id) {\n            found = true;\n          }\n        });\n        return found;\n      }\n    }, {\n      key: \"isLimitSelectionReached\",\n      value: function isLimitSelectionReached() {\n        return this._settings.limitSelection === this.selectedItems.length;\n      }\n    }, {\n      key: \"isAllItemsSelected\",\n      value: function isAllItemsSelected() {\n        // get disabld item count\n        var filteredItems = this.listFilterPipe.transform(this._data, this.filter);\n        var itemDisabledCount = filteredItems.filter(function (item) {\n          return item.isDisabled;\n        }).length; // take disabled items into consideration when checking\n\n        if ((!this.data || this.data.length === 0) && this._settings.allowRemoteDataSearch) {\n          return false;\n        }\n\n        return filteredItems.length === this.selectedItems.length + itemDisabledCount;\n      }\n    }, {\n      key: \"showButton\",\n      value: function showButton() {\n        if (!this._settings.singleSelection) {\n          if (this._settings.limitSelection > 0) {\n            return false;\n          } // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\n\n\n          return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\n        } else {\n          // should be disabled in single selection mode\n          return false;\n        }\n      }\n    }, {\n      key: \"itemShowRemaining\",\n      value: function itemShowRemaining() {\n        return this.selectedItems.length - this._settings.itemsShowLimit;\n      }\n    }, {\n      key: \"addSelected\",\n      value: function addSelected(item) {\n        if (this._settings.singleSelection) {\n          this.selectedItems = [];\n          this.selectedItems.push(item);\n        } else {\n          this.selectedItems.push(item);\n        }\n\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onSelect.emit(this.emittedValue(item));\n      }\n    }, {\n      key: \"removeSelected\",\n      value: function removeSelected(itemSel) {\n        var _this3 = this;\n\n        this.selectedItems.forEach(function (item) {\n          if (itemSel.id === item.id) {\n            _this3.selectedItems.splice(_this3.selectedItems.indexOf(item), 1);\n          }\n        });\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onDeSelect.emit(this.emittedValue(itemSel));\n      }\n    }, {\n      key: \"emittedValue\",\n      value: function emittedValue(val) {\n        var _this4 = this;\n\n        var selected = [];\n\n        if (Array.isArray(val)) {\n          val.map(function (item) {\n            selected.push(_this4.objectify(item));\n          });\n        } else {\n          if (val) {\n            return this.objectify(val);\n          }\n        }\n\n        return selected;\n      }\n    }, {\n      key: \"objectify\",\n      value: function objectify(val) {\n        if (this._sourceDataType === 'object') {\n          var obj = {};\n          obj[this._settings.idField] = val.id;\n          obj[this._settings.textField] = val.text;\n\n          if (this._sourceDataFields.includes(this._settings.disabledField)) {\n            obj[this._settings.disabledField] = val.isDisabled;\n          }\n\n          return obj;\n        }\n\n        if (this._sourceDataType === 'number') {\n          return Number(val.id);\n        } else {\n          return val.text;\n        }\n      }\n    }, {\n      key: \"toggleDropdown\",\n      value: function toggleDropdown(evt) {\n        evt.preventDefault();\n\n        if (this.disabled && this._settings.singleSelection) {\n          return;\n        }\n\n        this._settings.defaultOpen = !this._settings.defaultOpen;\n\n        if (!this._settings.defaultOpen) {\n          this.onDropDownClose.emit();\n        }\n      }\n    }, {\n      key: \"closeDropdown\",\n      value: function closeDropdown() {\n        this._settings.defaultOpen = false; // clear search text\n\n        if (this._settings.clearSearchFilter) {\n          this.filter.text = \"\";\n        }\n\n        this.onDropDownClose.emit();\n      }\n    }, {\n      key: \"toggleSelectAll\",\n      value: function toggleSelectAll() {\n        if (this.disabled) {\n          return false;\n        }\n\n        if (!this.isAllItemsSelected()) {\n          // filter out disabled item first before slicing\n          this.selectedItems = this.listFilterPipe.transform(this._data, this.filter).filter(function (item) {\n            return !item.isDisabled;\n          }).slice();\n          this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n        } else {\n          this.selectedItems = [];\n          this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n        }\n\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n      }\n    }, {\n      key: \"getFields\",\n      value: function getFields(inputData) {\n        var fields = [];\n\n        if (typeof inputData !== \"object\") {\n          return fields;\n        } // tslint:disable-next-line:forin\n\n\n        for (var prop in inputData) {\n          fields.push(prop);\n        }\n\n        return fields;\n      }\n    }]);\n\n    return MultiSelectComponent;\n  }();\n\n  MultiSelectComponent.ɵfac = function MultiSelectComponent_Factory(t) {\n    return new (t || MultiSelectComponent)(i0.ɵɵdirectiveInject(i1.ListFilterPipe), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  MultiSelectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MultiSelectComponent,\n    selectors: [[\"ng-multiselect-dropdown\"]],\n    hostBindings: function MultiSelectComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"blur\", function MultiSelectComponent_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n    },\n    inputs: {\n      placeholder: \"placeholder\",\n      disabled: \"disabled\",\n      settings: \"settings\",\n      data: \"data\"\n    },\n    outputs: {\n      onFilterChange: \"onFilterChange\",\n      onDropDownClose: \"onDropDownClose\",\n      onSelect: \"onSelect\",\n      onDeSelect: \"onDeSelect\",\n      onSelectAll: \"onSelectAll\",\n      onDeSelectAll: \"onDeSelectAll\"\n    },\n    features: [i0.ɵɵProvidersFeature([DROPDOWN_CONTROL_VALUE_ACCESSOR])],\n    decls: 18,\n    vars: 23,\n    consts: [[\"tabindex\", \"0\", 1, \"multiselect-dropdown\", 3, \"blur\", \"clickOutside\"], [\"tabindex\", \"-1\", 1, \"dropdown-btn\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"selected-item-container\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [2, \"float\", \"right !important\", \"padding-right\", \"4px\", 3, \"ngClass\"], [\"style\", \"padding-right: 15px;\", 4, \"ngIf\"], [1, \"dropdown-multiselect__caret\"], [1, \"dropdown-list\", 3, \"hidden\"], [1, \"item1\"], [\"class\", \"multiselect-item-checkbox\", \"style\", \"border-bottom: 1px solid #ccc;padding:10px\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"filter-textbox\", 4, \"ngIf\"], [1, \"item2\"], [\"class\", \"multiselect-item-checkbox\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"no-filtered-data\", 4, \"ngIf\"], [\"class\", \"no-data\", 4, \"ngIf\"], [1, \"selected-item-container\"], [1, \"selected-item\", 3, \"hidden\"], [2, \"padding-left\", \"2px\", \"color\", \"white\", 3, \"click\"], [2, \"padding-right\", \"15px\"], [1, \"multiselect-item-checkbox\", 2, \"border-bottom\", \"1px solid #ccc\", \"padding\", \"10px\", 3, \"click\"], [\"type\", \"checkbox\", \"aria-label\", \"multiselect-select-all\", 3, \"checked\", \"disabled\"], [1, \"filter-textbox\"], [\"type\", \"text\", \"aria-label\", \"multiselect-search\", 3, \"readOnly\", \"placeholder\", \"ngModel\", \"ngModelChange\"], [1, \"multiselect-item-checkbox\", 3, \"click\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\"], [1, \"no-filtered-data\"], [1, \"no-data\"]],\n    template: function MultiSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"blur\", function MultiSelectComponent_Template_div_blur_0_listener() {\n          return ctx.onTouched();\n        })(\"clickOutside\", function MultiSelectComponent_Template_div_clickOutside_0_listener() {\n          return ctx.closeDropdown();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"span\", 1);\n        i0.ɵɵlistener(\"click\", function MultiSelectComponent_Template_span_click_2_listener($event) {\n          return ctx.toggleDropdown($event);\n        });\n        i0.ɵɵtemplate(3, MultiSelectComponent_span_3_Template, 2, 1, \"span\", 2);\n        i0.ɵɵtemplate(4, MultiSelectComponent_span_4_Template, 6, 2, \"span\", 3);\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵtemplate(6, MultiSelectComponent_span_6_Template, 2, 1, \"span\", 5);\n        i0.ɵɵelement(7, \"span\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"ul\", 8);\n        i0.ɵɵtemplate(10, MultiSelectComponent_li_10_Template, 4, 3, \"li\", 9);\n        i0.ɵɵtemplate(11, MultiSelectComponent_li_11_Template, 2, 3, \"li\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ul\", 11);\n        i0.ɵɵtemplate(13, MultiSelectComponent_li_13_Template, 4, 4, \"li\", 12);\n        i0.ɵɵpipe(14, \"multiSelectFilter\");\n        i0.ɵɵtemplate(15, MultiSelectComponent_li_15_Template, 3, 1, \"li\", 13);\n        i0.ɵɵpipe(16, \"multiSelectFilter\");\n        i0.ɵɵtemplate(17, MultiSelectComponent_li_17_Template, 3, 1, \"li\", 14);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedItems.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.selectedItems)(\"ngForTrackBy\", ctx.trackByFn);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx._settings.defaultOpen));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.itemShowRemaining() > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx._settings.defaultOpen);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx._data.length > 0 || ctx._settings.allowRemoteDataSearch) && !ctx._settings.singleSelection && ctx._settings.enableCheckAll && ctx._settings.limitSelection === -1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx._data.length > 0 || ctx._settings.allowRemoteDataSearch) && ctx._settings.allowSearchFilter);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"max-height\", ctx._settings.maxHeight + \"px\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(14, 15, ctx._data, ctx.filter));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx._data.length != 0 && i0.ɵɵpipeBind2(16, 18, ctx._data, ctx.filter).length == 0 && !ctx._settings.allowRemoteDataSearch);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx._data.length == 0 && !ctx._settings.allowRemoteDataSearch);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.ClickOutsideDirective, i1.ListFilterPipe],\n    styles: [\".multiselect-dropdown[_ngcontent-%COMP%]{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item-container[_ngcontent-%COMP%]{display:flex;float:left;max-width:93%}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item-container[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]{border:1px solid #337ab7;margin-right:4px;margin-bottom:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item-container[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item-container[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]:hover{box-shadow:1px 1px #959595}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .dropdown-multiselect__caret[_ngcontent-%COMP%]{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s ease}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .dropdown-multiselect__caret[_ngcontent-%COMP%]:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0 8px;border-color:#999999 transparent;content:\\\"\\\"}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .dropdown-multiselect--active[_ngcontent-%COMP%]   .dropdown-multiselect__caret[_ngcontent-%COMP%]{transform:rotate(180deg)}.multiselect-dropdown[_ngcontent-%COMP%]   .disabled[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{background-color:#eceeef}.dropdown-list[_ngcontent-%COMP%]{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list[_ngcontent-%COMP%]   .filter-textbox[_ngcontent-%COMP%]{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list[_ngcontent-%COMP%]   .filter-textbox[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:0px;width:100%;padding:0 0 0 26px}.dropdown-list[_ngcontent-%COMP%]   .filter-textbox[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none}.multiselect-item-checkbox[_ngcontent-%COMP%]:hover{background-color:#e4e3e3}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:focus + div[_ngcontent-%COMP%]:before, .multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:hover + div[_ngcontent-%COMP%]:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:active + div[_ngcontent-%COMP%]:before{transition-duration:0s}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%] + div[_ngcontent-%COMP%]{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%] + div[_ngcontent-%COMP%]:before{box-sizing:content-box;content:\\\"\\\";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:all .4s ease}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%] + div[_ngcontent-%COMP%]:after{box-sizing:content-box;content:\\\"\\\";background-color:#337ab7;position:absolute;top:50%;left:4px;width:10px;height:10px;margin-top:-5px;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:disabled + div[_ngcontent-%COMP%]:before{border-color:#ccc}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:disabled:focus + div[_ngcontent-%COMP%]:before   .multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:disabled:hover + div[_ngcontent-%COMP%]:before{background-color:inherit}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:disabled:checked + div[_ngcontent-%COMP%]:before{background-color:#ccc}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%] + div[_ngcontent-%COMP%]:after{background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked + div[_ngcontent-%COMP%]:after{content:\\\"\\\";transform:rotate(-45deg) scale(1);transition:transform .2s ease-out}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked + div[_ngcontent-%COMP%]:before{animation:borderscale .2s ease-in;background:#337ab7}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked + div[_ngcontent-%COMP%]:after{transform:rotate(-45deg) scale(1)}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}\"],\n    changeDetection: 0\n  });\n  return MultiSelectComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}